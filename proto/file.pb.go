// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: proto/file.proto

package pgenerated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageText     string `protobuf:"bytes,2,opt,name=messageText,proto3" json:"messageText,omitempty"`
	QuotedMessageID int32  `protobuf:"varint,3,opt,name=quotedMessageID,proto3" json:"quotedMessageID,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetMessageText() string {
	if x != nil {
		return x.MessageText
	}
	return ""
}

func (x *Message) GetQuotedMessageID() int32 {
	if x != nil {
		return x.QuotedMessageID
	}
	return 0
}

type Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatName        string `protobuf:"bytes,2,opt,name=chatName,proto3" json:"chatName,omitempty"`
	ChatLanguage    string `protobuf:"bytes,3,opt,name=chatLanguage,proto3" json:"chatLanguage,omitempty"`
	ChatDescription string `protobuf:"bytes,4,opt,name=chatDescription,proto3" json:"chatDescription,omitempty"`
	ChatImage       string `protobuf:"bytes,5,opt,name=chatImage,proto3" json:"chatImage,omitempty"`
	ChatCreatedAt   string `protobuf:"bytes,6,opt,name=chatCreatedAt,proto3" json:"chatCreatedAt,omitempty"`
}

func (x *Chat) Reset() {
	*x = Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{1}
}

func (x *Chat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Chat) GetChatName() string {
	if x != nil {
		return x.ChatName
	}
	return ""
}

func (x *Chat) GetChatLanguage() string {
	if x != nil {
		return x.ChatLanguage
	}
	return ""
}

func (x *Chat) GetChatDescription() string {
	if x != nil {
		return x.ChatDescription
	}
	return ""
}

func (x *Chat) GetChatImage() string {
	if x != nil {
		return x.ChatImage
	}
	return ""
}

func (x *Chat) GetChatCreatedAt() string {
	if x != nil {
		return x.ChatCreatedAt
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserEmail string `protobuf:"bytes,3,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EncryptedData string `protobuf:"bytes,3,opt,name=encryptedData,proto3" json:"encryptedData,omitempty"`
}

func (x *Password) Reset() {
	*x = Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Password) ProtoMessage() {}

func (x *Password) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Password.ProtoReflect.Descriptor instead.
func (*Password) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{3}
}

func (x *Password) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Password) GetEncryptedData() string {
	if x != nil {
		return x.EncryptedData
	}
	return ""
}

type MessageInChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatID    int32 `protobuf:"varint,2,opt,name=chatID,proto3" json:"chatID,omitempty"`
	MessageID int32 `protobuf:"varint,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *MessageInChat) Reset() {
	*x = MessageInChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInChat) ProtoMessage() {}

func (x *MessageInChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInChat.ProtoReflect.Descriptor instead.
func (*MessageInChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{4}
}

func (x *MessageInChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageInChat) GetChatID() int32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

func (x *MessageInChat) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

type MessageOfUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID    int32 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	MessageID int32 `protobuf:"varint,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *MessageOfUser) Reset() {
	*x = MessageOfUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOfUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOfUser) ProtoMessage() {}

func (x *MessageOfUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOfUser.ProtoReflect.Descriptor instead.
func (*MessageOfUser) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{5}
}

func (x *MessageOfUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageOfUser) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *MessageOfUser) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

type UserInChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID int32 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatID int32 `protobuf:"varint,3,opt,name=chatID,proto3" json:"chatID,omitempty"`
}

func (x *UserInChat) Reset() {
	*x = UserInChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInChat) ProtoMessage() {}

func (x *UserInChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInChat.ProtoReflect.Descriptor instead.
func (*UserInChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{6}
}

func (x *UserInChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInChat) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserInChat) GetChatID() int32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

type ReactionToMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReactedUserID int32  `protobuf:"varint,2,opt,name=reactedUserID,proto3" json:"reactedUserID,omitempty"`
	MessageID     int32  `protobuf:"varint,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Reaction      string `protobuf:"bytes,4,opt,name=reaction,proto3" json:"reaction,omitempty"`
}

func (x *ReactionToMessage) Reset() {
	*x = ReactionToMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionToMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionToMessage) ProtoMessage() {}

func (x *ReactionToMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionToMessage.ProtoReflect.Descriptor instead.
func (*ReactionToMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{7}
}

func (x *ReactionToMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReactionToMessage) GetReactedUserID() int32 {
	if x != nil {
		return x.ReactedUserID
	}
	return 0
}

func (x *ReactionToMessage) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *ReactionToMessage) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

type ChatAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChatID int32 `protobuf:"varint,2,opt,name=userInChatID,proto3" json:"userInChatID,omitempty"`
}

func (x *ChatAdmin) Reset() {
	*x = ChatAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAdmin) ProtoMessage() {}

func (x *ChatAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAdmin.ProtoReflect.Descriptor instead.
func (*ChatAdmin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{8}
}

func (x *ChatAdmin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatAdmin) GetUserInChatID() int32 {
	if x != nil {
		return x.UserInChatID
	}
	return 0
}

type PasswordUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID     int32 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	PasswordID int32 `protobuf:"varint,3,opt,name=passwordID,proto3" json:"passwordID,omitempty"`
}

func (x *PasswordUser) Reset() {
	*x = PasswordUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordUser) ProtoMessage() {}

func (x *PasswordUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordUser.ProtoReflect.Descriptor instead.
func (*PasswordUser) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{9}
}

func (x *PasswordUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PasswordUser) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PasswordUser) GetPasswordID() int32 {
	if x != nil {
		return x.PasswordID
	}
	return 0
}

type FilledChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *FilledChat) Reset() {
	*x = FilledChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilledChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilledChat) ProtoMessage() {}

func (x *FilledChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilledChat.ProtoReflect.Descriptor instead.
func (*FilledChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{10}
}

func (x *FilledChat) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type MsgStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilledChats []*FilledChat `protobuf:"bytes,1,rep,name=filledChats,proto3" json:"filledChats,omitempty"`
}

func (x *MsgStream) Reset() {
	*x = MsgStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStream) ProtoMessage() {}

func (x *MsgStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStream.ProtoReflect.Descriptor instead.
func (*MsgStream) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{11}
}

func (x *MsgStream) GetFilledChats() []*FilledChat {
	if x != nil {
		return x.FilledChats
	}
	return nil
}

type StreamByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgStream *MsgStream `protobuf:"bytes,2,opt,name=msgStream,proto3" json:"msgStream,omitempty"`
}

func (x *StreamByUser) Reset() {
	*x = StreamByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamByUser) ProtoMessage() {}

func (x *StreamByUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamByUser.ProtoReflect.Descriptor instead.
func (*StreamByUser) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{12}
}

func (x *StreamByUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StreamByUser) GetMsgStream() *MsgStream {
	if x != nil {
		return x.MsgStream
	}
	return nil
}

type RequestSendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserID  int32    `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatID  int32    `protobuf:"varint,4,opt,name=chatID,proto3" json:"chatID,omitempty"`
}

func (x *RequestSendMessage) Reset() {
	*x = RequestSendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSendMessage) ProtoMessage() {}

func (x *RequestSendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSendMessage.ProtoReflect.Descriptor instead.
func (*RequestSendMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{13}
}

func (x *RequestSendMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestSendMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *RequestSendMessage) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RequestSendMessage) GetChatID() int32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

type RequestUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserEmail    string `protobuf:"bytes,2,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	UserPassword string `protobuf:"bytes,3,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
}

func (x *RequestUserLogin) Reset() {
	*x = RequestUserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserLogin) ProtoMessage() {}

func (x *RequestUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserLogin.ProtoReflect.Descriptor instead.
func (*RequestUserLogin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{14}
}

func (x *RequestUserLogin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUserLogin) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *RequestUserLogin) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

type RequestUserRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserEmail    string `protobuf:"bytes,3,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	UserPassword string `protobuf:"bytes,4,opt,name=userPassword,proto3" json:"userPassword,omitempty"`
}

func (x *RequestUserRegister) Reset() {
	*x = RequestUserRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserRegister) ProtoMessage() {}

func (x *RequestUserRegister) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserRegister.ProtoReflect.Descriptor instead.
func (*RequestUserRegister) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{15}
}

func (x *RequestUserRegister) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUserRegister) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RequestUserRegister) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *RequestUserRegister) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

type RequestUserLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID int32 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *RequestUserLogout) Reset() {
	*x = RequestUserLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserLogout) ProtoMessage() {}

func (x *RequestUserLogout) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserLogout.ProtoReflect.Descriptor instead.
func (*RequestUserLogout) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{16}
}

func (x *RequestUserLogout) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUserLogout) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type RequestCreateChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Chat   *Chat `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat,omitempty"`
	UserID int32 `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *RequestCreateChat) Reset() {
	*x = RequestCreateChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCreateChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCreateChat) ProtoMessage() {}

func (x *RequestCreateChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCreateChat.ProtoReflect.Descriptor instead.
func (*RequestCreateChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{17}
}

func (x *RequestCreateChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestCreateChat) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *RequestCreateChat) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type RequestAddUserToChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID int32 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ChatID int32 `protobuf:"varint,3,opt,name=chatID,proto3" json:"chatID,omitempty"`
}

func (x *RequestAddUserToChat) Reset() {
	*x = RequestAddUserToChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAddUserToChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAddUserToChat) ProtoMessage() {}

func (x *RequestAddUserToChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAddUserToChat.ProtoReflect.Descriptor instead.
func (*RequestAddUserToChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{18}
}

func (x *RequestAddUserToChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestAddUserToChat) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RequestAddUserToChat) GetChatID() int32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

type RequestReactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageID         int32              `protobuf:"varint,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ReactionToMessage *ReactionToMessage `protobuf:"bytes,2,opt,name=reactionToMessage,proto3" json:"reactionToMessage,omitempty"`
}

func (x *RequestReactMessage) Reset() {
	*x = RequestReactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReactMessage) ProtoMessage() {}

func (x *RequestReactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReactMessage.ProtoReflect.Descriptor instead.
func (*RequestReactMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{19}
}

func (x *RequestReactMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestReactMessage) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *RequestReactMessage) GetReactionToMessage() *ReactionToMessage {
	if x != nil {
		return x.ReactionToMessage
	}
	return nil
}

type RequestUnreactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageID         int32              `protobuf:"varint,3,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ReactionToMessage *ReactionToMessage `protobuf:"bytes,2,opt,name=reactionToMessage,proto3" json:"reactionToMessage,omitempty"`
}

func (x *RequestUnreactMessage) Reset() {
	*x = RequestUnreactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUnreactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUnreactMessage) ProtoMessage() {}

func (x *RequestUnreactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUnreactMessage.ProtoReflect.Descriptor instead.
func (*RequestUnreactMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{20}
}

func (x *RequestUnreactMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUnreactMessage) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *RequestUnreactMessage) GetReactionToMessage() *ReactionToMessage {
	if x != nil {
		return x.ReactionToMessage
	}
	return nil
}

type RequestGetMessagesByChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatID int32 `protobuf:"varint,2,opt,name=chatID,proto3" json:"chatID,omitempty"`
}

func (x *RequestGetMessagesByChat) Reset() {
	*x = RequestGetMessagesByChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetMessagesByChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetMessagesByChat) ProtoMessage() {}

func (x *RequestGetMessagesByChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetMessagesByChat.ProtoReflect.Descriptor instead.
func (*RequestGetMessagesByChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{21}
}

func (x *RequestGetMessagesByChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestGetMessagesByChat) GetChatID() int32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

type RequestGetUsersByChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatID int32 `protobuf:"varint,2,opt,name=chatID,proto3" json:"chatID,omitempty"`
}

func (x *RequestGetUsersByChat) Reset() {
	*x = RequestGetUsersByChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetUsersByChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetUsersByChat) ProtoMessage() {}

func (x *RequestGetUsersByChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetUsersByChat.ProtoReflect.Descriptor instead.
func (*RequestGetUsersByChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{22}
}

func (x *RequestGetUsersByChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestGetUsersByChat) GetChatID() int32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

type RequestGetChatsByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID int32 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *RequestGetChatsByUser) Reset() {
	*x = RequestGetChatsByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetChatsByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetChatsByUser) ProtoMessage() {}

func (x *RequestGetChatsByUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetChatsByUser.ProtoReflect.Descriptor instead.
func (*RequestGetChatsByUser) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{23}
}

func (x *RequestGetChatsByUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestGetChatsByUser) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type RequestRemoveUserFromChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChatID int32 `protobuf:"varint,2,opt,name=userInChatID,proto3" json:"userInChatID,omitempty"`
}

func (x *RequestRemoveUserFromChat) Reset() {
	*x = RequestRemoveUserFromChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRemoveUserFromChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRemoveUserFromChat) ProtoMessage() {}

func (x *RequestRemoveUserFromChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRemoveUserFromChat.ProtoReflect.Descriptor instead.
func (*RequestRemoveUserFromChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{24}
}

func (x *RequestRemoveUserFromChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestRemoveUserFromChat) GetUserInChatID() int32 {
	if x != nil {
		return x.UserInChatID
	}
	return 0
}

type RequestMakeUserAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChatID int32 `protobuf:"varint,2,opt,name=userInChatID,proto3" json:"userInChatID,omitempty"`
}

func (x *RequestMakeUserAdmin) Reset() {
	*x = RequestMakeUserAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMakeUserAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMakeUserAdmin) ProtoMessage() {}

func (x *RequestMakeUserAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMakeUserAdmin.ProtoReflect.Descriptor instead.
func (*RequestMakeUserAdmin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{25}
}

func (x *RequestMakeUserAdmin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestMakeUserAdmin) GetUserInChatID() int32 {
	if x != nil {
		return x.UserInChatID
	}
	return 0
}

type RequestRemoveUserAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChatID int32 `protobuf:"varint,2,opt,name=userInChatID,proto3" json:"userInChatID,omitempty"`
}

func (x *RequestRemoveUserAdmin) Reset() {
	*x = RequestRemoveUserAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRemoveUserAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRemoveUserAdmin) ProtoMessage() {}

func (x *RequestRemoveUserAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRemoveUserAdmin.ProtoReflect.Descriptor instead.
func (*RequestRemoveUserAdmin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{26}
}

func (x *RequestRemoveUserAdmin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestRemoveUserAdmin) GetUserInChatID() int32 {
	if x != nil {
		return x.UserInChatID
	}
	return 0
}

type RequestUpdateChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Chat *Chat `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat,omitempty"`
}

func (x *RequestUpdateChat) Reset() {
	*x = RequestUpdateChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUpdateChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUpdateChat) ProtoMessage() {}

func (x *RequestUpdateChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUpdateChat.ProtoReflect.Descriptor instead.
func (*RequestUpdateChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{27}
}

func (x *RequestUpdateChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUpdateChat) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type ResponseUserRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User    *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseUserRegister) Reset() {
	*x = ResponseUserRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserRegister) ProtoMessage() {}

func (x *ResponseUserRegister) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserRegister.ProtoReflect.Descriptor instead.
func (*ResponseUserRegister) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{28}
}

func (x *ResponseUserRegister) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseUserRegister) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ResponseUserRegister) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseUserRegister) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User    *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseUserLogin) Reset() {
	*x = ResponseUserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserLogin) ProtoMessage() {}

func (x *ResponseUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserLogin.ProtoReflect.Descriptor instead.
func (*ResponseUserLogin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{29}
}

func (x *ResponseUserLogin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseUserLogin) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ResponseUserLogin) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseUserLogin) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseUserLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseUserLogout) Reset() {
	*x = ResponseUserLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserLogout) ProtoMessage() {}

func (x *ResponseUserLogout) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserLogout.ProtoReflect.Descriptor instead.
func (*ResponseUserLogout) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{30}
}

func (x *ResponseUserLogout) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseUserLogout) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseUserLogout) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseGetUsersByChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Users   []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success bool    `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseGetUsersByChat) Reset() {
	*x = ResponseGetUsersByChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetUsersByChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetUsersByChat) ProtoMessage() {}

func (x *ResponseGetUsersByChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetUsersByChat.ProtoReflect.Descriptor instead.
func (*ResponseGetUsersByChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{31}
}

func (x *ResponseGetUsersByChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseGetUsersByChat) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ResponseGetUsersByChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseGetUsersByChat) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseGetMessagesByChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Messages []*Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	Message  string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success  bool       `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseGetMessagesByChat) Reset() {
	*x = ResponseGetMessagesByChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetMessagesByChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetMessagesByChat) ProtoMessage() {}

func (x *ResponseGetMessagesByChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetMessagesByChat.ProtoReflect.Descriptor instead.
func (*ResponseGetMessagesByChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{32}
}

func (x *ResponseGetMessagesByChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseGetMessagesByChat) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ResponseGetMessagesByChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseGetMessagesByChat) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseGetChatsByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Chats   []*Chat `protobuf:"bytes,2,rep,name=chats,proto3" json:"chats,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success bool    `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseGetChatsByUser) Reset() {
	*x = ResponseGetChatsByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetChatsByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetChatsByUser) ProtoMessage() {}

func (x *ResponseGetChatsByUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetChatsByUser.ProtoReflect.Descriptor instead.
func (*ResponseGetChatsByUser) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{33}
}

func (x *ResponseGetChatsByUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseGetChatsByUser) GetChats() []*Chat {
	if x != nil {
		return x.Chats
	}
	return nil
}

func (x *ResponseGetChatsByUser) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseGetChatsByUser) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseSendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageSent *Message `protobuf:"bytes,2,opt,name=messageSent,proto3" json:"messageSent,omitempty"`
	Message     string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success     bool     `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseSendMessage) Reset() {
	*x = ResponseSendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSendMessage) ProtoMessage() {}

func (x *ResponseSendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSendMessage.ProtoReflect.Descriptor instead.
func (*ResponseSendMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{34}
}

func (x *ResponseSendMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseSendMessage) GetMessageSent() *Message {
	if x != nil {
		return x.MessageSent
	}
	return nil
}

func (x *ResponseSendMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseSendMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseCreateChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Chat    *Chat  `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseCreateChat) Reset() {
	*x = ResponseCreateChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCreateChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCreateChat) ProtoMessage() {}

func (x *ResponseCreateChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCreateChat.ProtoReflect.Descriptor instead.
func (*ResponseCreateChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{35}
}

func (x *ResponseCreateChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseCreateChat) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *ResponseCreateChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseCreateChat) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseAddUserToChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChat *UserInChat `protobuf:"bytes,2,opt,name=userInChat,proto3" json:"userInChat,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success    bool        `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseAddUserToChat) Reset() {
	*x = ResponseAddUserToChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAddUserToChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAddUserToChat) ProtoMessage() {}

func (x *ResponseAddUserToChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAddUserToChat.ProtoReflect.Descriptor instead.
func (*ResponseAddUserToChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{36}
}

func (x *ResponseAddUserToChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseAddUserToChat) GetUserInChat() *UserInChat {
	if x != nil {
		return x.UserInChat
	}
	return nil
}

func (x *ResponseAddUserToChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseAddUserToChat) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseReactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReactionToMessage *ReactionToMessage `protobuf:"bytes,2,opt,name=reactionToMessage,proto3" json:"reactionToMessage,omitempty"`
	Message           string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success           bool               `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseReactMessage) Reset() {
	*x = ResponseReactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseReactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseReactMessage) ProtoMessage() {}

func (x *ResponseReactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseReactMessage.ProtoReflect.Descriptor instead.
func (*ResponseReactMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{37}
}

func (x *ResponseReactMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseReactMessage) GetReactionToMessage() *ReactionToMessage {
	if x != nil {
		return x.ReactionToMessage
	}
	return nil
}

func (x *ResponseReactMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseReactMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseUnreactMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReactionToMessage *ReactionToMessage `protobuf:"bytes,2,opt,name=reactionToMessage,proto3" json:"reactionToMessage,omitempty"`
	Message           string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success           bool               `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseUnreactMessage) Reset() {
	*x = ResponseUnreactMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUnreactMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUnreactMessage) ProtoMessage() {}

func (x *ResponseUnreactMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUnreactMessage.ProtoReflect.Descriptor instead.
func (*ResponseUnreactMessage) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{38}
}

func (x *ResponseUnreactMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseUnreactMessage) GetReactionToMessage() *ReactionToMessage {
	if x != nil {
		return x.ReactionToMessage
	}
	return nil
}

func (x *ResponseUnreactMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseUnreactMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseRemoveUserFromChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChat *UserInChat `protobuf:"bytes,2,opt,name=userInChat,proto3" json:"userInChat,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success    bool        `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseRemoveUserFromChat) Reset() {
	*x = ResponseRemoveUserFromChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRemoveUserFromChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRemoveUserFromChat) ProtoMessage() {}

func (x *ResponseRemoveUserFromChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRemoveUserFromChat.ProtoReflect.Descriptor instead.
func (*ResponseRemoveUserFromChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{39}
}

func (x *ResponseRemoveUserFromChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseRemoveUserFromChat) GetUserInChat() *UserInChat {
	if x != nil {
		return x.UserInChat
	}
	return nil
}

func (x *ResponseRemoveUserFromChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseRemoveUserFromChat) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseMakeUserAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChat *UserInChat `protobuf:"bytes,2,opt,name=userInChat,proto3" json:"userInChat,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success    bool        `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseMakeUserAdmin) Reset() {
	*x = ResponseMakeUserAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMakeUserAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMakeUserAdmin) ProtoMessage() {}

func (x *ResponseMakeUserAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMakeUserAdmin.ProtoReflect.Descriptor instead.
func (*ResponseMakeUserAdmin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{40}
}

func (x *ResponseMakeUserAdmin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseMakeUserAdmin) GetUserInChat() *UserInChat {
	if x != nil {
		return x.UserInChat
	}
	return nil
}

func (x *ResponseMakeUserAdmin) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseMakeUserAdmin) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseRemoveUserAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserInChat *UserInChat `protobuf:"bytes,2,opt,name=userInChat,proto3" json:"userInChat,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success    bool        `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseRemoveUserAdmin) Reset() {
	*x = ResponseRemoveUserAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRemoveUserAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRemoveUserAdmin) ProtoMessage() {}

func (x *ResponseRemoveUserAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRemoveUserAdmin.ProtoReflect.Descriptor instead.
func (*ResponseRemoveUserAdmin) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{41}
}

func (x *ResponseRemoveUserAdmin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseRemoveUserAdmin) GetUserInChat() *UserInChat {
	if x != nil {
		return x.UserInChat
	}
	return nil
}

func (x *ResponseRemoveUserAdmin) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseRemoveUserAdmin) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseUpdateChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Chat    *Chat  `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseUpdateChat) Reset() {
	*x = ResponseUpdateChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUpdateChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUpdateChat) ProtoMessage() {}

func (x *ResponseUpdateChat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUpdateChat.ProtoReflect.Descriptor instead.
func (*ResponseUpdateChat) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{42}
}

func (x *ResponseUpdateChat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseUpdateChat) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *ResponseUpdateChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseUpdateChat) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{43}
}

var File_proto_file_proto protoreflect.FileDescriptor

var file_proto_file_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x65, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0xc4, 0x01, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x50, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x40, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x55, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22,
	0x4c, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x22, 0x83, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x63, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0a,
	0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x09,
	0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x39, 0x0a, 0x0b, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x09, 0x6d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49,
	0x44, 0x22, 0x64, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3b, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x11, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x56,
	0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x11,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x4c, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x42, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x44, 0x22, 0x4a, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x7e, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x58, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x91, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x7f, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x4c, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x94, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x6b, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x7f, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xe7, 0x09, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a,
	0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58,
	0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43,
	0x68, 0x61, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x1a, 0x23, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x68,
	0x61, 0x74, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x74, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x0d, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x21,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a,
	0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x41, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x41, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x32, 0xcd, 0x01, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x11, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x11,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x1a, 0x12, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_file_proto_rawDescOnce sync.Once
	file_proto_file_proto_rawDescData = file_proto_file_proto_rawDesc
)

func file_proto_file_proto_rawDescGZIP() []byte {
	file_proto_file_proto_rawDescOnce.Do(func() {
		file_proto_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_file_proto_rawDescData)
	})
	return file_proto_file_proto_rawDescData
}

var file_proto_file_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_proto_file_proto_goTypes = []interface{}{
	(*Message)(nil),                    // 0: chatservice.Message
	(*Chat)(nil),                       // 1: chatservice.Chat
	(*User)(nil),                       // 2: chatservice.User
	(*Password)(nil),                   // 3: chatservice.Password
	(*MessageInChat)(nil),              // 4: chatservice.MessageInChat
	(*MessageOfUser)(nil),              // 5: chatservice.MessageOfUser
	(*UserInChat)(nil),                 // 6: chatservice.UserInChat
	(*ReactionToMessage)(nil),          // 7: chatservice.ReactionToMessage
	(*ChatAdmin)(nil),                  // 8: chatservice.ChatAdmin
	(*PasswordUser)(nil),               // 9: chatservice.PasswordUser
	(*FilledChat)(nil),                 // 10: chatservice.FilledChat
	(*MsgStream)(nil),                  // 11: chatservice.MsgStream
	(*StreamByUser)(nil),               // 12: chatservice.StreamByUser
	(*RequestSendMessage)(nil),         // 13: chatservice.RequestSendMessage
	(*RequestUserLogin)(nil),           // 14: chatservice.RequestUserLogin
	(*RequestUserRegister)(nil),        // 15: chatservice.RequestUserRegister
	(*RequestUserLogout)(nil),          // 16: chatservice.RequestUserLogout
	(*RequestCreateChat)(nil),          // 17: chatservice.RequestCreateChat
	(*RequestAddUserToChat)(nil),       // 18: chatservice.RequestAddUserToChat
	(*RequestReactMessage)(nil),        // 19: chatservice.RequestReactMessage
	(*RequestUnreactMessage)(nil),      // 20: chatservice.RequestUnreactMessage
	(*RequestGetMessagesByChat)(nil),   // 21: chatservice.RequestGetMessagesByChat
	(*RequestGetUsersByChat)(nil),      // 22: chatservice.RequestGetUsersByChat
	(*RequestGetChatsByUser)(nil),      // 23: chatservice.RequestGetChatsByUser
	(*RequestRemoveUserFromChat)(nil),  // 24: chatservice.RequestRemoveUserFromChat
	(*RequestMakeUserAdmin)(nil),       // 25: chatservice.RequestMakeUserAdmin
	(*RequestRemoveUserAdmin)(nil),     // 26: chatservice.RequestRemoveUserAdmin
	(*RequestUpdateChat)(nil),          // 27: chatservice.RequestUpdateChat
	(*ResponseUserRegister)(nil),       // 28: chatservice.ResponseUserRegister
	(*ResponseUserLogin)(nil),          // 29: chatservice.ResponseUserLogin
	(*ResponseUserLogout)(nil),         // 30: chatservice.ResponseUserLogout
	(*ResponseGetUsersByChat)(nil),     // 31: chatservice.ResponseGetUsersByChat
	(*ResponseGetMessagesByChat)(nil),  // 32: chatservice.ResponseGetMessagesByChat
	(*ResponseGetChatsByUser)(nil),     // 33: chatservice.ResponseGetChatsByUser
	(*ResponseSendMessage)(nil),        // 34: chatservice.ResponseSendMessage
	(*ResponseCreateChat)(nil),         // 35: chatservice.ResponseCreateChat
	(*ResponseAddUserToChat)(nil),      // 36: chatservice.ResponseAddUserToChat
	(*ResponseReactMessage)(nil),       // 37: chatservice.ResponseReactMessage
	(*ResponseUnreactMessage)(nil),     // 38: chatservice.ResponseUnreactMessage
	(*ResponseRemoveUserFromChat)(nil), // 39: chatservice.ResponseRemoveUserFromChat
	(*ResponseMakeUserAdmin)(nil),      // 40: chatservice.ResponseMakeUserAdmin
	(*ResponseRemoveUserAdmin)(nil),    // 41: chatservice.ResponseRemoveUserAdmin
	(*ResponseUpdateChat)(nil),         // 42: chatservice.ResponseUpdateChat
	(*Empty)(nil),                      // 43: chatservice.Empty
}
var file_proto_file_proto_depIdxs = []int32{
	0,  // 0: chatservice.FilledChat.messages:type_name -> chatservice.Message
	10, // 1: chatservice.MsgStream.filledChats:type_name -> chatservice.FilledChat
	11, // 2: chatservice.StreamByUser.msgStream:type_name -> chatservice.MsgStream
	0,  // 3: chatservice.RequestSendMessage.message:type_name -> chatservice.Message
	1,  // 4: chatservice.RequestCreateChat.chat:type_name -> chatservice.Chat
	7,  // 5: chatservice.RequestReactMessage.reactionToMessage:type_name -> chatservice.ReactionToMessage
	7,  // 6: chatservice.RequestUnreactMessage.reactionToMessage:type_name -> chatservice.ReactionToMessage
	1,  // 7: chatservice.RequestUpdateChat.chat:type_name -> chatservice.Chat
	2,  // 8: chatservice.ResponseUserRegister.user:type_name -> chatservice.User
	2,  // 9: chatservice.ResponseUserLogin.user:type_name -> chatservice.User
	2,  // 10: chatservice.ResponseGetUsersByChat.users:type_name -> chatservice.User
	0,  // 11: chatservice.ResponseGetMessagesByChat.messages:type_name -> chatservice.Message
	1,  // 12: chatservice.ResponseGetChatsByUser.chats:type_name -> chatservice.Chat
	0,  // 13: chatservice.ResponseSendMessage.messageSent:type_name -> chatservice.Message
	1,  // 14: chatservice.ResponseCreateChat.chat:type_name -> chatservice.Chat
	6,  // 15: chatservice.ResponseAddUserToChat.userInChat:type_name -> chatservice.UserInChat
	7,  // 16: chatservice.ResponseReactMessage.reactionToMessage:type_name -> chatservice.ReactionToMessage
	7,  // 17: chatservice.ResponseUnreactMessage.reactionToMessage:type_name -> chatservice.ReactionToMessage
	6,  // 18: chatservice.ResponseRemoveUserFromChat.userInChat:type_name -> chatservice.UserInChat
	6,  // 19: chatservice.ResponseMakeUserAdmin.userInChat:type_name -> chatservice.UserInChat
	6,  // 20: chatservice.ResponseRemoveUserAdmin.userInChat:type_name -> chatservice.UserInChat
	1,  // 21: chatservice.ResponseUpdateChat.chat:type_name -> chatservice.Chat
	2,  // 22: chatservice.ChatService.SubscribeByUser:input_type -> chatservice.User
	13, // 23: chatservice.ChatService.SendMessageToChat:input_type -> chatservice.RequestSendMessage
	17, // 24: chatservice.ChatService.CreateChat:input_type -> chatservice.RequestCreateChat
	27, // 25: chatservice.ChatService.UpdateChat:input_type -> chatservice.RequestUpdateChat
	23, // 26: chatservice.ChatService.GetChatsByUser:input_type -> chatservice.RequestGetChatsByUser
	22, // 27: chatservice.ChatService.GetUsersByChat:input_type -> chatservice.RequestGetUsersByChat
	21, // 28: chatservice.ChatService.GetMessagesByChat:input_type -> chatservice.RequestGetMessagesByChat
	18, // 29: chatservice.ChatService.AddUserToChat:input_type -> chatservice.RequestAddUserToChat
	24, // 30: chatservice.ChatService.RemoveUserFromChat:input_type -> chatservice.RequestRemoveUserFromChat
	25, // 31: chatservice.ChatService.MakeUserAdmin:input_type -> chatservice.RequestMakeUserAdmin
	26, // 32: chatservice.ChatService.RemoveUserAdmin:input_type -> chatservice.RequestRemoveUserAdmin
	19, // 33: chatservice.ChatService.RequestReactAMessage:input_type -> chatservice.RequestReactMessage
	20, // 34: chatservice.ChatService.RequestUnreactAMessage:input_type -> chatservice.RequestUnreactMessage
	43, // 35: chatservice.ChatService.Disconnect:input_type -> chatservice.Empty
	14, // 36: chatservice.AuthService.Login:input_type -> chatservice.RequestUserLogin
	15, // 37: chatservice.AuthService.Register:input_type -> chatservice.RequestUserRegister
	16, // 38: chatservice.AuthService.Logout:input_type -> chatservice.RequestUserLogout
	12, // 39: chatservice.ChatService.SubscribeByUser:output_type -> chatservice.StreamByUser
	34, // 40: chatservice.ChatService.SendMessageToChat:output_type -> chatservice.ResponseSendMessage
	35, // 41: chatservice.ChatService.CreateChat:output_type -> chatservice.ResponseCreateChat
	42, // 42: chatservice.ChatService.UpdateChat:output_type -> chatservice.ResponseUpdateChat
	33, // 43: chatservice.ChatService.GetChatsByUser:output_type -> chatservice.ResponseGetChatsByUser
	31, // 44: chatservice.ChatService.GetUsersByChat:output_type -> chatservice.ResponseGetUsersByChat
	32, // 45: chatservice.ChatService.GetMessagesByChat:output_type -> chatservice.ResponseGetMessagesByChat
	36, // 46: chatservice.ChatService.AddUserToChat:output_type -> chatservice.ResponseAddUserToChat
	39, // 47: chatservice.ChatService.RemoveUserFromChat:output_type -> chatservice.ResponseRemoveUserFromChat
	40, // 48: chatservice.ChatService.MakeUserAdmin:output_type -> chatservice.ResponseMakeUserAdmin
	41, // 49: chatservice.ChatService.RemoveUserAdmin:output_type -> chatservice.ResponseRemoveUserAdmin
	37, // 50: chatservice.ChatService.RequestReactAMessage:output_type -> chatservice.ResponseReactMessage
	38, // 51: chatservice.ChatService.RequestUnreactAMessage:output_type -> chatservice.ResponseUnreactMessage
	43, // 52: chatservice.ChatService.Disconnect:output_type -> chatservice.Empty
	2,  // 53: chatservice.AuthService.Login:output_type -> chatservice.User
	2,  // 54: chatservice.AuthService.Register:output_type -> chatservice.User
	43, // 55: chatservice.AuthService.Logout:output_type -> chatservice.Empty
	39, // [39:56] is the sub-list for method output_type
	22, // [22:39] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_file_proto_init() }
func file_proto_file_proto_init() {
	if File_proto_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOfUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionToMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilledChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCreateChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAddUserToChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUnreactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetMessagesByChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetUsersByChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetChatsByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRemoveUserFromChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMakeUserAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRemoveUserAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUpdateChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetUsersByChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetMessagesByChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetChatsByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCreateChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAddUserToChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseReactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUnreactMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRemoveUserFromChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMakeUserAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRemoveUserAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUpdateChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_file_proto_goTypes,
		DependencyIndexes: file_proto_file_proto_depIdxs,
		MessageInfos:      file_proto_file_proto_msgTypes,
	}.Build()
	File_proto_file_proto = out.File
	file_proto_file_proto_rawDesc = nil
	file_proto_file_proto_goTypes = nil
	file_proto_file_proto_depIdxs = nil
}
